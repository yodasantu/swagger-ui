# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Redpill API
  description: This application runs an image analysis service
  version: "2.0-dev"
# the domain of the service
host: redpill-elb.prod-be-aws.net
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /health:
    get:
      summary: Health Check
      description: |
        This api may be used to verify that the server is running and responding to requests.
      tags:
        - Health Check
      responses:
        200:
          description: Health information of this server
          schema:
            type: object
            items:
              $ref: '#/definitions/Health'
#        default:
#          description: Unexpected error
#          schema:
#            $ref: '#/definitions/Error'
  /models:
    get:
      summary: Redpill Models
      description: |
        The api may be used to get information about the processing models available to the server.
      tags:
        - Models
      responses:
        200:
          description: An array of models
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
  /features/{model}/images/{uuid}:
    post:
      summary: Request features for an image
      description: |
        This api may be used to analyze image features.
        The {model} path parameter selects the processing model.
        Use the models api for find out what models are supported by the server.
        The {uuid} path parameter is a string that is returned in the reponse
        as the value of key "uuid" but is otherwise uninterpreted by the service.
        Clients may use it identify the image, for example.
      parameters:
        - name: model
          in: path
          description: Model name selected to process image.
          required: true
          type: string
        - name: uuid
          in: path
          description: The id for the image submitted.
          required: true
          type: string
        - name: url
          in: formData
          description: The url of the image to be processed. http, https, and s3 schemes are supported. It's required if the image parameter is not present in the request.
          type: string
        - name: image
          in: formData
          description: The image data. A wide variety of formats and color spaces are supported. It's required if the url parameter is not present in the request.
          type: string
        - name: analyzers
          in: formData
          description: Selects the analyzers to be applied to the image. Analyzers will be concatenated as a comma-separated string. Please note that different models support different analyzers. Use the models api to find out what analyzers are supported by a model. A value of "all" selects all the analyzers supported by the model
          type: string
        - name: search.num_buckets
          in: formData
          description: Specifies the number of buckets the search analyzer will return in the response. Default is 20. Minimum is 1.
          type: integer
          format: int32
        - name: tagging.num_tags
          in: formData
          description: Specifies the number of tags the tagging analyzer will return in the response. Default is 25. Minimum is 1.
          type: integer
          format: int32
        - name: tagging.threshold
          in: formData
          description: Specifies the minimum confidence value the tagging analyzer will return in the response. Note that a high value may result in no tags being returned in the response. Default is 0.0. Minimum is 0.0.
          type: number
          format: double
      tags:
        - Features
      responses:
        200:
          description: A block of features estimates by redpill
          schema:
            type: object
            items:
              $ref: '#/definitions/FeatureResult'
#        default:
#          description: Unexpected error
#          schema:
#            $ref: '#/definitions/Error'
definitions:
  Health:
    type: object
    properties:
      version:
        type: string
        description: Version of this redpill.
      healthy:
        type: string
        description: Boolean string to define if the redpill is works fine.
  Model:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      version:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      analyzers:
        type: array
        items:
          $ref: '#/definitions/Analyzer'
  Analyzer:
    type: string
    description: Analyzer name included in this redpill model, for example "feature", "search", "tagging" or "aesthetic".
  FeatureResult:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the image
      version:
        type: string
        description: Version of redpill API
      created_on:
        type: string
        description: Date time of this image processing
      model:
        type: string
        description: Model name choosed by user for process this image
      feature:
        $ref: '#/definitions/Feature'
      search:
        $ref: '#/definitions/Search'
      tagging:
        $ref: '#/definitions/Tagging'
      aesthetic:
        $ref: '#/definitions/Aesthetic'
  Feature:
    type: object
    properties:
      descriptor:
        type: string
        description: The "descriptor" value is gzip compressed and base-64 encoded. The "created_on" value indicates the time this record was created in UTC.
  Search:
    type: object
    properties:
      pq_code:
        type: string
        description: The "pq_code" value is base-64 encoded.
      buckets:
        $ref: '#/definitions/Buckets'
  Buckets:
    type: object
    properties:
      ids:
        type: array
        description: The "buckets.ids" value is an array of bucket ids starting with the bucket id. Of this asset. The array is ordered from the nearest bucket to the furthest bucket.
        items:
          type: string
      similarity:
        type: array
        items:
          type: string
        description: The "buckets.similarity" value is an array of similarities of the corresponding buckets in the "ids" array. Note that the similarity of the first bucket does not necessarily have a value of 1.0; typically it will be less that 1.0, as in this example.
  Tagging:
    type: object
    properties:
      confidence:
        type: array
        items:
          type: string
        description: The "confidence" value is of the corresponding keyword.
      keywords:
        type: array
        items:
          type: string
        description: The keyword extracted from the image.
  Aesthetic:
    type: object
    properties:
      rule_of_thirds:
        type: number
        format: double
      quality:
        type: number
        format: double
      interesting_content:
        type: number
        format: double
      vivid_color:
        type: number
        format: double
      motion_blur:
        type: number
        format: double
      symmetry:
        type: number
        format: double
      balancing_element:
        type: number
        format: double
      color_harmony:
        type: number
        format: double
      interesting_lighting:
        type: number
        format: double
      repetition:
        type: number
        format: double
      depth_of_field:
        type: number
        format: double
      object_emphasis:
        type: number
        format: double
